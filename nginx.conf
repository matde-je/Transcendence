events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types; #file types
    client_max_body_size 100M;

    server {
        listen 443 ssl;
        server_name localhost; 

        ssl_certificate /etc/nginx/ssl/cert.crt; 
        ssl_certificate_key /etc/nginx/ssl/cert.key;

        ssl_protocols TLSv1.2 TLSv1.3;  # Only allow modern protocols
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;

        # Serve static files
        location /static/ {
        alias /usr/share/nginx/html/static/;  
        }

        # Serve media files
        location /media/ {
            alias /usr/share/nginx/html/media/;  
        }

        location / {
            proxy_pass https://backend:8000;  
            proxy_ssl_certificate /etc/nginx/ssl/cert.crt;
            proxy_ssl_certificate_key /etc/nginx/ssl/cert.key;  
            proxy_ssl_verify off; 
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade; #WebSocket protocol upgrades
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme; #connection was originally secure
        } 
    }
}