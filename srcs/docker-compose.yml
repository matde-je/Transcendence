networks:
  transcendence:

volumes:
  postgres_data:

services:
  db:
    container_name: postgres
    image: postgres:13
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - transcendence
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: django
    build: .
    command: >
      sh -c "until pg_isready -h db -p 5432 -U $${POSTGRES_USER}; do
               echo 'Waiting for Postgres...';
               sleep 2;
             done &&
             daphne -b 0.0.0.0 -p 8000 transcendence.asgi:application"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    networks:
      - transcendence
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=transcendence.settings
    restart: unless-stopped
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
